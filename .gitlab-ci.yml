stages:
  - build
  - deploy

.build-content-base: &build-content-base
  stage: build
  image: docker
  services:
    - docker:dind
  script:
    - docker run
      -v $(pwd):/content
      -u $(id -u $USER)
      gitlab-registry.tubit.tu-berlin.de/innodoc/innoconv
      --verbose .

Build:
  <<: *build-content-base
  except:
    - master
    - legacy-latex

Build (master):
  <<: *build-content-base
  artifacts:
    name: "build-${CI_COMMIT_REF_NAME}"
    paths:
      - innoconv_output/
    expire_in: 1 year
  only:
    - master

.deploy-base: &deploy-base
  stage: deploy
  image: alpine
  dependencies:
    - "Build (master)"
  before_script:
    - apk add --no-cache openssh-client
    - mkdir -p ~/.ssh
  after_script:
    - rm -f ~/.ssh/id_ecdsa
  only:
    - master

Deploy (staging):
  <<: *deploy-base
  environment:
    name: staging
    url: https://innodoc-staging.innocampus.tu-berlin.de/
  script:
    - echo "$STAGING_SSH_KEY" | tr -d '\r' > ~/.ssh/id_ecdsa
    - chmod 600 ~/.ssh/id_ecdsa
    - echo "$STAGING_SERVER_KEY" > ~/.ssh/known_hosts
    - tar czf - innoconv_output | ssh
      -o PasswordAuthentication=no
      -o PreferredAuthentications=publickey
      -i ~/.ssh/id_ecdsa
      $STAGING_DESTINATION
      tub_base

Deploy (production):
  <<: *deploy-base
  environment:
    name: production
    url: https://innodoc.innocampus.tu-berlin.de/
  script:
    - echo "$PRODUCTION_SSH_KEY" | tr -d '\r' > ~/.ssh/id_ecdsa
    - chmod 600 ~/.ssh/id_ecdsa
    - echo "$PRODUCTION_SERVER_KEY" > ~/.ssh/known_hosts
    - tar czf - innoconv_output | ssh
      -o PasswordAuthentication=no
      -o PreferredAuthentications=publickey
      -i ~/.ssh/id_ecdsa
      $PRODUCTION_DESTINATION
      tub_base
